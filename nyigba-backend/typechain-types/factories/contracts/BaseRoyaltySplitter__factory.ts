/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BaseRoyaltySplitter,
  BaseRoyaltySplitterInterface,
} from "../../contracts/BaseRoyaltySplitter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "splitId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "RecipientAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "splitId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "RecipientRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "splitId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RoyaltyDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "splitId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalShares",
        type: "uint256",
      },
    ],
    name: "RoyaltySplitCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_DISTRIBUTION_TIMEOUT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BASE_MAX_SHARES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BASIS_POINTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "splitId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "addRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allSplitIds",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "splitId",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "percentages",
        type: "uint256[]",
      },
    ],
    name: "createRoyaltySplit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "creatorSplits",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "splitId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeRoyalties",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllSplitIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "getCreatorSplits",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "splitId",
        type: "bytes32",
      },
    ],
    name: "getRoyaltySplit",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "percentage",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct BaseRoyaltySplitter.RoyaltyShare[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "splitId",
        type: "bytes32",
      },
    ],
    name: "getSplit",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "distributedAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct BaseRoyaltySplitter.Split",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "splitId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "removeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "royaltySplits",
    outputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "splits",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "distributedAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461007f57600160005533156100695760018054336001600160a01b03198216811790925560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a361155090816100858239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063290ffb7f146111b25780633019f9cc1461105c57806336aab40614610d1c5780633b88686c14610d00578063451f99bc14610ce25780634883602b14610be55780636f388d8614610b2a5780636ff1c9bc146109ab57806370390ce01461095a578063715018a6146108fd5780638da5cb5b146108d45780639ac24e651461087c5780639f8227da14610801578063a72bc0641461079d578063b9b9b48a14610712578063d60dd26014610666578063d91c3aa21461019c578063e1f1c4a71461017f5763f2fde38b0361000e573461017a57602036600319011261017a5761010a61124b565b6101126114ee565b6001600160a01b0390811690811561016157600154826001600160601b0360a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b3461017a57600036600319011261017a5760206040516127108152f35b6101a536611261565b600260009392935414610654576002600055801561060f5781600052600260205260406000206101d781541515611310565b6001600160a01b03841661059f57813410610562575b6040516101f9816113c0565b60018060a01b038516815282602082015260006040820152600060608201524260808201528360005260036020526004608060406000209260018060a01b038151166001600160601b0360a01b855416178455602081015160018501556040810151600285015561027f60608201511515600386019060ff801983541691151516179055565b015191015560009360005b82548110156104aa5760ff60026102a18386611219565b500154166102b2575b60010161028a565b9460016102bf8785611219565b5001548085029085820403610494576001600160a01b0383166103ac5760008080806102eb8b89611219565b50546127108604906001600160a01b03165af13d156103a7573d67ffffffffffffffff8111610391576040519061032c601f8201601f1916602001836113dc565b8152600060203d92013e5b156103565760019161271061034e925b049061148b565b9590506102aa565b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b610337565b6103b68785611219565b505460405163a9059cbb60e01b81526001600160a01b039182166004820152612710830460248083019190915291604491906020908290849082906000908b165af190811561048857600091610459575b501561041e57505060019161271061034e92610347565b9074151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60649260156040519362461bcd60e51b855260206004860152840152820152fd5b61047b915060203d602011610481575b61047381836113dc565b810190611498565b8a610407565b503d610469565b6040513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b60008581526003602081905260409091206002810188905501805460ff191660011790558385836001600160a01b0381161580610559575b610524575b6040519283526001600160a01b0316917f7613e125d05e29e146efd83b6c8cd7ffebca4d4e78cd59dc4bb0f010de3ead9990602090a36001600055005b8234033481116104945760008080809381883414610550575b3390f16104e7576040513d6000823e3d90fd5b506108fc61053d565b508234116104e2565b60405162461bcd60e51b8152602060048201526015602482015274125b9cdd59999a58da595b9d08115512081cd95b9d605a1b6044820152606490fd5b6040516323b872dd60e01b81523360048201523060248201526044810183905260208160648160006001600160a01b038a165af18015610488576105eb916000916105f0575b506114b0565b6101ed565b610609915060203d6020116104815761047381836113dc565b866105e5565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b604051633ee5aeb560e01b8152600490fd5b3461017a57604036600319011261017a576024356001600160a01b03818116916004359083900361017a578060005260028060205260406000206106ac81541515611310565b60005b81548110156100195785856106c48385611219565b505416146106d4576001016106af565b906106e192939450611219565b5001805460ff191690557f61cc8eb7635d59f1dbec674e9f62f3ac56791ddcfc51e3507c4b3a937fc4c7a1600080a3005b3461017a5760208060031936011261017a576001600160a01b0361073461124b565b1660005260046020526040600020906040519081602084549182815201936000526020600020916000905b8282106107865761078285610776818903826113dc565b604051918291826112d4565b0390f35b83548652948501946001938401939091019061075f565b3461017a57602036600319011261017a57600435600052600360205260a06040600020600180831b03815416906001810154906002810154600460ff6003840154169201549260405194855260208501526040840152151560608301526080820152f35b3461017a57600036600319011261017a57604051806005549182815260208091019260056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0916000905b8282106108655761078285610776818903826113dc565b83548652948501946001938401939091019061084e565b3461017a57604036600319011261017a5761089561124b565b6001600160a01b031660009081526004602052604090208054602435919082101561017a576020916108c6916112bc565b90546040519160031b1c8152f35b3461017a57600036600319011261017a576001546040516001600160a01b039091168152602090f35b3461017a57600036600319011261017a576109166114ee565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461017a57602036600319011261017a5760043560055481101561017a5760209060056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00154604051908152f35b3461017a5760208060031936011261017a576109c561124b565b6109cd6114ee565b6001600160a01b0390811680610a305750479182156109fb5750600080809381936001541682f11561048857005b6064906040519062461bcd60e51b82526004820152600e60248201526d4e6f204554482062616c616e636560901b6044820152fd5b6040516370a0823160e01b815230600482015290918382602481865afa91821561048857600092610afb575b508115610ac3579060448492600154166000604051958694859363a9059cbb60e01b8552600485015260248401525af19081156104885761001992600092610aa6575b50506114b0565b610abc9250803d106104815761047381836113dc565b8280610a9f565b60405162461bcd60e51b815260048101859052601060248201526f4e6f20746f6b656e2062616c616e636560801b6044820152606490fd5b9091508381813d8311610b23575b610b1381836113dc565b8101031261017a57519084610a5c565b503d610b09565b3461017a57602036600319011261017a5760006080604051610b4b816113c0565b8281528260208201528260408201528260608201520152600435600052600360205260a06040600020604051610b80816113c0565b600180841b0382541691828252600181015460208301908152600282015490604084019182526080600460ff60038601541694606087019515158652015494019384526040519485525160208501525160408401525115156060830152516080820152f35b3461017a5760208060031936011261017a5760043560005260029060028152604060002091825467ffffffffffffffff81116103915760405191610c2e848360051b01846113dc565b81835260009485528385208484019591865b848410610ca157604080518881528751818a018190528a928201908a60005b828110610c6c5784840385f35b855180516001600160a01b03168552808301518584015260409081015115159085015294810194606090930192600101610c5f565b600387600192604051610cb3816113a4565b848060a01b038754168152848701548382015260ff868801541615156040820152815201930193019291610c40565b3461017a57600036600319011261017a57602060405162278d008152f35b3461017a57600036600319011261017a57602060405160148152f35b3461017a57606036600319011261017a57602460043567ffffffffffffffff823581811161017a57610d5290369060040161128b565b93909160443590811161017a57610d6d90369060040161128b565b9081860361101f5785151580611014575b15610fd0578460005260029060209460028652604060002054610f8c576000805b858210610f5657612710915003610f145760005b888110610eb157505050505033600052600482526040600020908154600160401b9283821015610e9c5790610ded916001820181556112bc565b81549060031b9086821b91600019901b191617905560055491821015610e88576001820180600555821015610e74575090827ffe43880363f33c4b16b816e7664f2c14a2ca55a51d263bc2184e1287a7d2392b9260056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001556040519384523393a3005b634e487b7160e01b60009081526032600452fd5b634e487b7160e01b60009081526041600452fd5b82634e487b7160e01b60005260416004526000fd5b87600052838752604060002090610ec9818b8561147b565b356001600160a01b038116929083900361017a57600192610f0e91610eef848a8961147b565b3560405192610efd846113a4565b83528b8301528460408301526113fe565b01610db3565b606485876040519162461bcd60e51b83528160048401528201527f546f74616c2070657263656e74616765206d75737420657175616c20313030256044820152fd5b610f84600191610f72610f6a858a8961147b565b35151561134e565b610f7d84898861147b565b359061148b565b910190610d9f565b60405162461bcd60e51b8152600481018790526017818701527f53706c697420494420616c7265616479206578697374730000000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526017818501527f496e76616c696420726563697069656e7420636f756e740000000000000000006044820152606490fd5b506014861115610d7e565b60405162461bcd60e51b81526020600482015260168185015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b3461017a5761106a36611261565b82600093929352602092600260205260406000209384549061108d821515611310565b6014821015611174576110a184151561134e565b60005b828110611109575050507fb1dc639e8a69c709094eaca27c2956e6bce1cb3063870c6e6cd54c18406d466e9161110060209260018060a01b031695604051906110ec826113a4565b8782528385830152600160408301526113fe565b604051908152a3005b6111138188611219565b50546001600160a01b0385811691161461112f576001016110a4565b60405162461bcd60e51b815260048101839052601860248201527f526563697069656e7420616c72656164792065786973747300000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527513585e081c9958da5c1a595b9d1cc81c995858da195960521b6044820152606490fd5b3461017a57604036600319011261017a5760243560043560005260026020526040600020805482101561017a576060916111eb91611219565b5060018060a01b038154169060ff600260018301549201541690604051928352602083015215156040820152f35b8054821015611235576000526003602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361017a57565b606090600319011261017a57600435906024356001600160a01b038116810361017a579060443590565b9181601f8401121561017a5782359167ffffffffffffffff831161017a576020808501948460051b01011161017a57565b80548210156112355760005260206000200190600090565b602090602060408183019282815285518094520193019160005b8281106112fc575050505090565b8351855293810193928101926001016112ee565b1561131757565b60405162461bcd60e51b815260206004820152600f60248201526e14dc1b1a5d081b9bdd08199bdd5b99608a1b6044820152606490fd5b1561135557565b60405162461bcd60e51b815260206004820152602160248201527f50657263656e74616765206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608490fd5b6060810190811067ffffffffffffffff82111761039157604052565b60a0810190811067ffffffffffffffff82111761039157604052565b90601f8019910116810190811067ffffffffffffffff82111761039157604052565b8054600160401b8110156103915761141b91600182018155611219565b61146557600260406114639360018060a01b038151166001600160601b0360a01b855416178455602081015160018501550151151591019060ff801983541691151516179055565b565b634e487b7160e01b600052600060045260246000fd5b91908110156112355760051b0190565b9190820180921161049457565b9081602091031261017a5751801515810361017a5790565b156114b757565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b6001546001600160a01b0316330361150257565b60405163118cdaa760e01b8152336004820152602490fdfea264697066735822122050e9b4cd627312b6d62d403064821827649ab711938f9f5e23bfd5dfab7e904664736f6c63430008180033";

type BaseRoyaltySplitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseRoyaltySplitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseRoyaltySplitter__factory extends ContractFactory {
  constructor(...args: BaseRoyaltySplitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BaseRoyaltySplitter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BaseRoyaltySplitter__factory {
    return super.connect(runner) as BaseRoyaltySplitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseRoyaltySplitterInterface {
    return new Interface(_abi) as BaseRoyaltySplitterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaseRoyaltySplitter {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BaseRoyaltySplitter;
  }
}
